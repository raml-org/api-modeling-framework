/**
 * Created by antoniogarrote on 05/05/2017.
 */

import {DomainModel} from "./DomainModel";
import {Clojure} from "../../Clojure";
import {GenericTag} from "./GenericTag";

/**
 * Lexical information generated by the parser. SourceMaps are optional and can
 * be used to reconstruct the original lexical structure of the model during generation
 */
export class SourceMap extends DomainModel {

    /**
     * Each unit of lexical information stored as a tag
     * @returns {GenericTag[]}
     */
    public getTags(): GenericTag[] {
        let tags = Clojure.amf_domain.tags(this.rawModel);
        return Clojure.cljsMap(tags, (e) => new GenericTag(e));
    }

    public setTags(tags: GenericTag[]) {
        const newTags = tags.map(e => e.clojureModel());
        this.rawModel = Clojure.amf.update(DomainModel.domain_builder, this.rawModel, Clojure.kw("tags"), Clojure.toCljsSeq(newTags));
    }

    public static build(id: string): SourceMap {
        return new SourceMap(Clojure.amf.build(
            DomainModel.domain_builder,
            Clojure.amf_document.map__GT_DocumentSourceMap,
            id));
    }
}